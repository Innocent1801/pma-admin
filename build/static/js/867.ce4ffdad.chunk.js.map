{"version":3,"file":"static/js/867.ce4ffdad.chunk.js","mappings":"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","sources":["ATOMIC/atoms/button/Button.jsx","UI/users/AddUser.jsx"],"sourcesContent":["import clsx from \"clsx\";\nimport React from \"react\";\nimport './buttonStyle.scss'\n\n\nconst style = \"default\"\n\nconst Button = ({ onClick = (e) => {}, variant, children, className, isDisabled }) => {\n  switch (variant) {\n    case \"normal\":\n      className = clsx( \"btn-normal\");\n      break;\n    case \"blur\":\n      className = clsx( \"btn-blur\");\n      break;\n    case \"primary\":\n      className = clsx(style, \"btn-primary\");\n      break;\n    case \"secondary\":\n      className = clsx(style, \"btn-secondary\");\n      break;\n    case \"transparent\":\n      className = clsx(style, \"btn-transparent\");\n      break;\n    case \"outlined\":\n      className = clsx(style, \"btn-outlined\");\n      break;\n    default:\n      break;\n  }\n  return (\n    <button onClick={(e) => onClick(e)} className={className} isDisabled={isDisabled}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useCallback, useState } from \"react\";\nimport \"../../ATOMIC/organisms/user/user.scss\";\nimport Button from \"../../ATOMIC/atoms/button/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginRegister, makePost } from \"../../redux/apiCalls\";\n\nconst AddUser = () => {\n  const { isFetching } = useSelector((state) => state.process);\n  const dispatch = useDispatch();\n\n  const [visibility, setVisibility] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = (e) => {\n    setInputs((prev) => {\n      return { ...prev, [e.target.name]: e.target.value };\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    makePost(dispatch, \"/admin/add-user\", { ...inputs }, setMessage);\n  };\n\n  message && setTimeout(() => {\n    setMessage('')\n  }, 2000);\n\n  return (\n    <main className=\"user-container\">\n      <div className=\"new-user-header\">\n        <h3>Add New User</h3>\n        <p>Create a new user and add them to the platform</p>\n      </div>\n      <form className=\"user-form\" onSubmit={handleSubmit}>\n        <div className=\"form-items\">\n          <div>\n            <label style={{ width: \"200px\" }}>\n              Role <span>*</span>\n            </label>\n            <select\n              name=\"role\"\n              id=\"role\"\n              style={{ width: \"100%\", height: \"30px\" }}\n              required\n              onChange={handleChange}\n            >\n              <option value=\"\">Choose user role</option>\n              <option value=\"client\">Client</option>\n              <option value=\"model\">Model</option>\n              <option value=\"agency\">Agency</option>\n            </select>\n          </div>\n          <div>\n            <label style={{ width: \"200px\" }}>\n              Email <span>*</span>\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label style={{ width: \"200px\" }}>\n              First name <span>*</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"first name\"\n              name=\"firstName\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label style={{ width: \"200px\" }}>\n              Last name <span>*</span>\n            </label>\n            <input\n              type=\"text\"\n              placeholder=\"last name\"\n              name=\"lastName\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label style={{ width: \"200px\" }}>\n              Mobile No <span>*</span>\n            </label>\n            <input\n              type=\"number\"\n              placeholder=\"number\"\n              name=\"mobileNo\"\n              autoComplete=\"off\"\n              required\n              onChange={handleChange}\n            />\n          </div>\n          <div>\n            <label style={{ width: \"200px\" }}>\n              Password <span>*</span>\n            </label>\n           {/* <label htmlFor=\"\"> */}\n           <input\n              type={visibility ? \"text\" : \"password\"}\n              placeholder=\"password\"\n              name=\"password\"\n              required\n              onChange={handleChange}\n            />\n            toggle\n            {/* <Button\n              variant=\"outlined\"\n              onClick={() => setVisibility(!visibility)}\n            >\n              {visibility ? \"Hide\" : \"Show\"}\n            </Button> */}\n           {/* </label> */}\n          </div>\n        </div>\n        <div className=\"user-notification\">\n          <p>Send user notification?</p>\n          <div>\n            <label htmlFor=\"\">\n              <input type=\"checkbox\" name=\"\" id=\"\" />\n            </label>\n          </div>\n          <p>Send the new user a mail about their account?</p>\n        </div>\n        <div className=\"btn\">\n          <Button variant=\"normal\">\n            {isFetching ? \"Please wait...\" : \"Add New user\"}\n          </Button>\n        </div>\n      </form>\n      {message && alert(message)}\n    </main>\n  );\n};\n\nexport default AddUser;\n"],"names":["style","_ref","_ref$onClick","onClick","e","variant","children","className","isDisabled","clsx","_jsx","isFetching","useSelector","state","process","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","visibility","_useState3","_useState4","inputs","setInputs","_useState5","_useState6","message","setMessage","handleChange","prev","_objectSpread","_defineProperty","target","name","value","setTimeout","_jsxs","onSubmit","preventDefault","makePost","width","id","height","required","onChange","type","placeholder","autoComplete","htmlFor","Button","alert"],"sourceRoot":""}