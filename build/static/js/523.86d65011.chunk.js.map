{"version":3,"file":"static/js/523.86d65011.chunk.js","mappings":"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","sources":["UI/Admin-UI/AdminPage/Ambassador/withdraw.js","UI/Admin-UI/AdminPage/Ambassador/Amb-item.js","UI/Admin-UI/AdminPage/Ambassador/Amb-list.js","UI/Admin-UI/AdminPage/dashboard/dashboard.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./withdraw.css\";\r\nimport { ambassadorsRequest } from \"../../../../redux/requestMethod\";\r\n\r\nconst PayOut = ({ amb, toggleWithdrawal, setToggleWithdrawal, formatMoney }) => {\r\n  const [currentAmb, setCurrentAmb] = useState({});\r\n  const [showId, setShowId] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [toggleMsg, setToggleMsg] = useState(false);\r\n\r\n  const [withdraw, setWithDraw] = useState({\r\n    Amount: \"\",\r\n    ID: \"\",\r\n  });\r\n\r\n  const handleWithDraw = (e) => {\r\n    const { id, value } = e.target;\r\n\r\n    setWithDraw((prev) => ({ ...prev, [id]: value }));\r\n  };\r\n\r\n  const payOut = async (data) => {\r\n    try {\r\n      const res = await ambassadorsRequest.put(`/admin/amb-edit/${amb._id}`, data);\r\n      //console.log(res.data);\r\n      setWithDraw({\r\n        Amount: \"\",\r\n        ID: \"\",\r\n      });\r\n      setToggleWithdrawal((prev) => !prev);\r\n      setMessage(\"Transaction Successful!\");\r\n      setToggleMsg(true);\r\n    } catch (err) {\r\n      //console.log(err?.response?.data);\r\n      setMessage(\"Transaction Failed!\");\r\n    }\r\n  };\r\n\r\n  const handlePayOut = () => {\r\n    let newPayout = amb.payout + Number(withdraw.Amount);\r\n\r\n    let newBal = amb.availableBal - Number(withdraw.Amount);\r\n\r\n    if (withdraw.Amount > amb.availableBal) {\r\n      setMessage(\"Error: Insufficient Fund!\");\r\n      setToggleMsg(true);\r\n    } else if (withdraw.ID !== amb.code) {\r\n      setMessage(\"Error: Incorrect Id!\");\r\n      setToggleMsg(true);\r\n    } else {\r\n      payOut({\r\n        availableBal: newBal,\r\n        payout: newPayout,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section\r\n        style={{ transform: toggleWithdrawal && `translateX(${0}%)` }}\r\n        className=\"modal-container\">\r\n        <div className=\"withdraw-box\">\r\n          <div className=\"withdraw-top-text\">\r\n            <h3>Withdraw</h3>\r\n            <i\r\n              onClick={() => setToggleWithdrawal((prev) => !prev)}\r\n              className=\"fa-solid fa-xmark noti-close colored-hover\"></i>\r\n          </div>\r\n\r\n          <div className=\"withdraw-wrapper\">\r\n            <div className=\"withdraw-stats\">\r\n              <div className=\"stat-wrapper\">\r\n                <button className=\"stat-tag pink-tag\">Earning</button>\r\n                <p className=\"-stat\">{formatMoney(amb.totalEarning)}</p>\r\n              </div>\r\n              <div className=\"stat-wrapper\">\r\n                <button className=\"stat-tag black-tag\">Balance</button>\r\n                <p className=\"-stat\">{formatMoney(amb.availableBal)}</p>\r\n              </div>\r\n              <div className=\"stat-wrapper  \">\r\n                <button className=\"stat-tag green-tag\">PayOut</button>\r\n                <p className=\"-stat\">{formatMoney(amb.payout)}</p>\r\n              </div>\r\n            </div>\r\n            <form\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handlePayOut();\r\n              }}\r\n              className=\"withdraw-form\">\r\n              <label className=\"Abs-label\" htmlFor=\"Amount\">\r\n                <input\r\n                  id=\"Amount\"\r\n                  type=\"number\"\r\n                  value={withdraw.Amount}\r\n                  onChange={handleWithDraw}\r\n                  placeholder=\"Amount...\"\r\n                  spellCheck={false}\r\n                  autoComplete=\"off\"\r\n                  required\r\n                />\r\n              </label>\r\n\r\n              <label className=\"-Abs-label\" htmlFor=\"ID\">\r\n                <input\r\n                  id=\"ID\"\r\n                  type={showId ? \"text\" : \"password\"}\r\n                  value={withdraw.ID}\r\n                  onChange={handleWithDraw}\r\n                  placeholder=\"Enter id...\"\r\n                  spellCheck={false}\r\n                  autoComplete=\"off\"\r\n                  required\r\n                />\r\n\r\n                {showId ? (\r\n                  <i\r\n                    onClick={() => setShowId((prev) => !prev)}\r\n                    className=\"fa-solid fa-eye viewPwd\"></i>\r\n                ) : (\r\n                  <i\r\n                    onClick={() => setShowId((prev) => !prev)}\r\n                    className=\"fa-solid fa-eye-slash viewPwd\"></i>\r\n                )}\r\n              </label>\r\n\r\n              <button className=\"withdraw-btn\">withdraw</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* modal section.... // // displaying the response from the server */}\r\n      <section className=\"modal-container\" style={{ transform: toggleMsg && `translateX(${0}%)` }}>\r\n        <div className=\"modal-box\">\r\n          {message === \"Transaction Successful!\" ? (\r\n            <i className=\"fa-solid fa-circle-check fa-2x success-icon\"></i>\r\n          ) : (\r\n            <i className=\"fa-solid fa-circle-xmark fa-2x error-icon\"></i>\r\n          )}\r\n\r\n          <p className=\"modal-text\">{message}</p>\r\n          <div\r\n            onClick={() => {\r\n              setToggleMsg(false);\r\n              setMessage(\"\");\r\n            }}\r\n            className=\"modal-btn\">\r\n            Got it!\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default PayOut;\r\n","const AmbItem = ({ amb, formatMoney, setToggleWithdrawal, setCurrent }) => {\r\n  return (\r\n    <li key={amb.code} className=\"Abs\">\r\n      <section className=\"Abs-info-section\">\r\n        {/* amb img */}\r\n\r\n        <div className=\"Abs-img-wrapper\">\r\n          <img className=\"Abs-img\" src={amb.picture} alt=\"Ambassador-img\" />\r\n        </div>\r\n\r\n        {/* amb details */}\r\n\r\n        <div className=\"Abs-details\">\r\n          <p className=\"Abs-name\">{`${amb.firstName} ${amb.lastName}`}</p>\r\n          <em className=\"Abs-email\">\r\n            {Array.from(amb.email).slice(0, 17)}\r\n            {Array.from(amb.email).length > 17 ? \"...\" : null}\r\n          </em>\r\n          <p>\r\n            <strong>Id: </strong>\r\n            {amb.code}\r\n          </p>\r\n        </div>\r\n      </section>\r\n      {/* Abs stats */}\r\n      <section className=\"Abs-stat-section\">\r\n        {/* top stats */}\r\n        <div className=\"top-stats\">\r\n          <div className=\"stat-wrapper\">\r\n            <button className=\"stat-tag green-tag\">Models</button>\r\n            <p className=\"stat\">{amb.models.length}</p>\r\n          </div>\r\n          <div className=\"stat-wrapper\">\r\n            <button className=\"stat-tag pink-tag\">Active</button>\r\n            <p className=\"stat\">{amb.activeModels}</p>\r\n          </div>\r\n          <div className=\"stat-wrapper\">\r\n            <button className=\"stat-tag black-tag\">Pending</button>\r\n            <p className=\"stat\">{amb.pendingModels}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* bottom stat */}\r\n\r\n        <div className=\"bottom-stats\">\r\n          <div className=\"stat-wrapper\">\r\n            <button className=\"stat-tag pink-tag\">Earning</button>\r\n            <p className=\"stat\">{formatMoney(amb.totalEarning)}</p>\r\n          </div>\r\n          <div className=\"stat-wrapper\">\r\n            <button className=\"stat-tag black-tag\">Balance</button>\r\n            <p className=\"stat\">{formatMoney(amb.availableBal)}</p>\r\n          </div>\r\n          <div className=\"stat-wrapper  \">\r\n            <button\r\n              onClick={() => {\r\n                setToggleWithdrawal(true);\r\n                setCurrent(amb);\r\n              }}\r\n              className=\"stat-tag green-tag\">\r\n              PayOut\r\n            </button>\r\n            <p className=\"stat\">{formatMoney(amb.payout)}</p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AmbItem;\r\n","import { useState } from \"react\";\r\nimport \"./Amb-list.css\";\r\nimport PayOut from \"./withdraw\";\r\n\r\nimport AmbItem from \"./Amb-item\";\r\n\r\nconst Ambassador = ({ ambData }) => {\r\n  const [toggleWithdrawal, setToggleWithdrawal] = useState(false);\r\n  const [current, setCurrent] = useState({});\r\n\r\n  const formatMoney = (num = 0) => {\r\n    return \"#\" + Number(num).toLocaleString(\"en-US\");\r\n    // return num.toLocaleString(\"en-Us\", { style: \"currency\", currency: \"NGN\" });\r\n  };\r\n\r\n  return (\r\n    <section className=\"Ambassador-section\">\r\n      <h1 className=\"Abs-title\">Ambassadors</h1>\r\n      <ul className=\"Abs-list\">\r\n        {ambData.length !== 0 ? (\r\n          ambData.map((amb) => {\r\n            return (\r\n              <AmbItem\r\n                key={amb.code}\r\n                amb={amb}\r\n                formatMoney={formatMoney}\r\n                setToggleWithdrawal={setToggleWithdrawal}\r\n                setCurrent={setCurrent}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <div className=\"Abs-not-found\">Ambassadors Not Found!</div>\r\n        )}\r\n      </ul>\r\n\r\n      {/* withdrawal section */}\r\n\r\n      <PayOut\r\n        toggleWithdrawal={toggleWithdrawal}\r\n        setToggleWithdrawal={setToggleWithdrawal}\r\n        formatMoney={formatMoney}\r\n        amb={current}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Ambassador;\r\n","import \"./dashboard.scss\";\r\n\r\n//  Icons --> [START]\r\nimport { BiRightArrow, BiWallet, BiRefresh } from \"react-icons/bi\";\r\n// [END]\r\n\r\n// Temporary Profile Image\r\nimport profileImage from \"../../../../Images/img/slider3.jpg\";\r\n\r\n// Other External NPM Packages --> [START]\r\nimport { Chart } from \"chart.js/auto\"; //Registering Charts (\"Do not remove this import\")\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeGet } from \"../../../../redux/apiCalls\";\r\nimport moment from \"moment\";\r\nimport { userRequest, ambassadorsRequest } from \"../../../../redux/requestMethod\";\r\nimport Ambassador from \"../Ambassador/Amb-list\";\r\n// [END]\r\n\r\nconst AdminDashboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState([]);\r\n  const [model, setModel] = useState([]);\r\n  const [client, setClient] = useState([]);\r\n  const [agency, setAgency] = useState([]);\r\n  const [blog, setBlog] = useState([]);\r\n\r\n  // // ambassadors state\r\n  const [ambassadors, setAmbassadors] = useState([]);\r\n\r\n  //  get user stat\r\n  const [stat, setStat] = useState([]);\r\n  const [loginStat, setLoginStat] = useState([]);\r\n\r\n  // // state for initializing array with default value\r\n  const [allData, setAllData] = useState(\"\");\r\n  const [allLoginData, setAllLoginData] = useState(\"\");\r\n\r\n  // // get percentage % states\r\n  const [total, setTotal] = useState(\"\");\r\n  const [modelPer, setModelPer] = useState(\"\");\r\n  const [clientPer, setClientPer] = useState(\"\");\r\n  const [agencyPer, setAgencyPer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    makeGet(dispatch, \"/user\", setMessage);\r\n  }, [setMessage, dispatch]);\r\n  const reversedMessage = [...message].reverse();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resModel = await userRequest.get(\"/model/models\");\r\n      setModel(resModel.data);\r\n    };\r\n    return () => fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resClient = await userRequest.get(\"/client/clients\");\r\n      setClient(resClient.data);\r\n    };\r\n    return () => fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resAgency = await userRequest.get(\"/agency/\");\r\n      setAgency(resAgency.data);\r\n    };\r\n    return () => fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const resBlog = await userRequest.get(\"/blog/blogs\");\r\n      setBlog(resBlog.data);\r\n    };\r\n    return () => fetchData();\r\n  }, []);\r\n\r\n  const reversedBlog = [...blog].reverse();\r\n\r\n  useEffect(() => {\r\n    const fetchStat = async () => {\r\n      const res = await userRequest.get(\"/admin/stats\");\r\n      setStat(res.data);\r\n    };\r\n    fetchStat();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLoginStat = async () => {\r\n      const res = await userRequest.get(\"/admin/login/stats\");\r\n      setLoginStat(res.data);\r\n    };\r\n    fetchLoginStat();\r\n  }, []);\r\n\r\n  //fetching ambassadors\r\n  useEffect(() => {\r\n    const fetchAmbassadors = async () => {\r\n      const res = await ambassadorsRequest.get(\"/admin/ambassadors/all\");\r\n      setAmbassadors(res.data.models);\r\n    };\r\n    return () => fetchAmbassadors();\r\n  }, []);\r\n\r\n  // // initializing datalist\r\n  useEffect(() => {\r\n    const dataList = Array(12).fill(null); // Initialize the array with default value \"Dec\"\r\n    stat.forEach((s) => {\r\n      if (s._id >= 1 && s._id <= 12) {\r\n        dataList[s._id - 1] = s.total;\r\n      }\r\n    });\r\n\r\n    setAllData(dataList);\r\n  }, [stat]);\r\n\r\n  // // initializing loginDatalist\r\n  useEffect(() => {\r\n    const loginDataList = Array(12).fill(null); // Initialize the array with default value \"Dec\"\r\n    loginStat.forEach((s) => {\r\n      if (s.month >= 1 && s.month <= 12) {\r\n        loginDataList[s.month - 1] = s.login;\r\n      }\r\n    });\r\n\r\n    setAllLoginData(loginDataList);\r\n  }, [loginStat]);\r\n\r\n  // // getting total percentage %\r\n  useEffect(() => {\r\n    setTotal(model?.length + agency?.length + client?.length);\r\n  }, [model, agency, client]);\r\n\r\n  // // getting models, client and agency percentage %\r\n  useEffect(() => {\r\n    setModelPer(Math.round((model?.length * 100) / total));\r\n    setClientPer(Math.round((client?.length * 100) / total));\r\n    setAgencyPer(Math.round((agency?.length * 100) / total));\r\n  }, [total, model, client, agency]);\r\n\r\n  // Now dataList will have the values based on _id indices\r\n  // console.log(dataList);\r\n\r\n  const data = {\r\n    labels: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sept\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"NEW USER\",\r\n        width: \"10px\",\r\n        backgroundColor: \"royalblue\",\r\n        data: allData,\r\n        barPercentage: 0.5,\r\n        borderRadius: 4,\r\n      },\r\n      {\r\n        label: \"LOGINS\",\r\n        backgroundColor: \"hotpink\",\r\n        data: allLoginData,\r\n        barPercentage: 0.5,\r\n        borderRadius: 4,\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        suggestedMax: 30,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n  };\r\n  //   [END]\r\n\r\n  const donughtOptions = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    cutout: \"80%\",\r\n  };\r\n  //   [END]\r\n\r\n  //Data used in Group Stats[START]\r\n  const modelData = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\"#bfc4c9\", \"royalblue\"],\r\n        data: [14409, 10566],\r\n      },\r\n    ],\r\n  };\r\n  const agenciesData = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\"#bfc4c9\", \"hotpink\"],\r\n        data: [14409, 1365],\r\n      },\r\n    ],\r\n  };\r\n  const clientsData = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\"#bfc4c9\", \"black\"],\r\n        data: [14409, 2468],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const groupDonughtOptions = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    cutout: \"40%\",\r\n    radius: \"100%\",\r\n  };\r\n  //   [END]\r\n\r\n  //Data Used in Pie Chart For User History [START]\r\n  const donughtData = {\r\n    labels: [\"Models\", \"Agencies\", \"Clients\"],\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\"royalblue\", \"hotpink\", \"black\"],\r\n        data: [model?.length, agency?.length, client?.length],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div id=\"admin_dashboard\">\r\n      {/* GRID <--[START] */}\r\n      <div className=\"pane\">\r\n        {/* GRID AREA 1 --> [START] */}\r\n        <div id=\"area_one\">\r\n          {/* users chart section starts */}\r\n\r\n          <div className=\"holder\">\r\n            <div className=\"visitor_stats\">\r\n              <header>\r\n                <span>User Statistics</span>\r\n                <span id=\"key_holder\">\r\n                  <span className=\"key\"></span>USERS\r\n                  <span className=\"key\"></span>LOGINS\r\n                </span>\r\n                <select name=\"time_frame\" id=\"time_frame\">\r\n                  <option value=\"6\">Last 6 days</option>\r\n                </select>\r\n              </header>\r\n              <div id=\"visitors_bar_chart\">\r\n                <Bar data={data} options={options} />\r\n              </div>\r\n              <footer>\r\n                <span>\r\n                  Audience Overview <BiRightArrow color=\"#ff007a\" />\r\n                </span>\r\n              </footer>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Users chart section ends */}\r\n\r\n          {/* Recently Added members section starts*/}\r\n\r\n          <div id=\"recent_members\">\r\n            <table id=\"recent_members_table\">\r\n              <caption>\r\n                <h3>Recent Members</h3>\r\n              </caption>\r\n              <thead>\r\n                <tr>\r\n                  <th>Username</th>\r\n                  <th>Level</th>\r\n                  <th>Joined</th>\r\n                  {/* <th>Expires</th> */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {reversedMessage?.slice(0, 4).map((item, index) => (\r\n                  <tr key={index}>\r\n                    <td>\r\n                      <div className=\"profile\">\r\n                        <div className=\"profile_image\">\r\n                          <img\r\n                            src={item?.picture ? item?.picture : \"/images/avatar2.png\"}\r\n                            alt=\"profilepic\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"profile_name\">\r\n                          <div>{item?.firstName} </div>\r\n                          <div>{item?.lastName}</div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td>{item?.role}</td>\r\n                    <td>{moment(item?.createdAt).format(\"MMMM DD, YYYY\")}</td>\r\n                    {/* <td>Dec 26, 2022</td> */}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colSpan={4}>\r\n                    <span>\r\n                      View All Members <BiRightArrow />\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Recently Added members section ends */}\r\n\r\n          {/*Recently published section starts  */}\r\n\r\n          <div id=\"activity\">\r\n            <table id=\"activities_table\">\r\n              <caption>\r\n                <h3>Activity</h3>\r\n                <p>Recently Published</p>\r\n              </caption>\r\n\r\n              <thead>\r\n                <tr>\r\n                  <th>DATE & TIME</th>\r\n                  <th>POSTS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {reversedBlog?.slice(0, 5).map((blog, index) => (\r\n                  <tr key={index}>\r\n                    <td>{moment(blog.createdAt).fromNow()}</td>\r\n                    <td>{blog?.title}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n                  <td colSpan={2}>\r\n                    <span>\r\n                      Recent Comments <BiRightArrow />\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Recently published section ends */}\r\n        </div>\r\n        {/* GRID AREA 1 <--[END] */}\r\n\r\n        {/* GRID AREA 2 --> [START] */}\r\n        <section id=\"area_two\">\r\n          <section id=\"group_stats\">\r\n            <div className=\"group_stats_box\">\r\n              <div>\r\n                <div>Models</div>\r\n                <div>{model.length}</div>\r\n              </div>\r\n              <div>\r\n                <Doughnut data={modelData} options={groupDonughtOptions} />\r\n              </div>\r\n            </div>\r\n            <span className=\"group_stats_box\">\r\n              <div>\r\n                <div>Agencies</div>\r\n                {agency.length}\r\n              </div>\r\n              <div>\r\n                <Doughnut data={agenciesData} options={groupDonughtOptions} />\r\n              </div>\r\n            </span>\r\n            <span className=\"group_stats_box\">\r\n              <div>\r\n                <div>Clients</div>\r\n                {client.length}\r\n              </div>\r\n              <div>\r\n                <Doughnut data={clientsData} options={groupDonughtOptions} />\r\n              </div>\r\n            </span>\r\n          </section>\r\n\r\n          <section id=\"wallet_buttons\">\r\n            <button id=\"active\">\r\n              <BiWallet size={20} />\r\n              <span>AGENCY WALLET</span>\r\n            </button>\r\n            <button>\r\n              <BiWallet size={20} />\r\n              <span>MODEL WALLET</span>\r\n            </button>\r\n          </section>\r\n\r\n          {/*Users pie chart starts */}\r\n\r\n          <section className=\"holder\">\r\n            <div id=\"donught_chart_holder\">\r\n              <header>\r\n                <span>Users Pie Chart History</span>\r\n                <BiRefresh size={30} color=\"#66788A\" />\r\n              </header>\r\n              <div id=\"donught_chart\">\r\n                <div>\r\n                  <Doughnut data={donughtData} options={donughtOptions} />\r\n                </div>\r\n                <div>\r\n                  <div>\r\n                    <span id=\"models_key\"></span>\r\n                    <span className=\"name\">Models</span>\r\n                    <span id=\"models_size\">{modelPer}%</span>\r\n                  </div>\r\n                  <div>\r\n                    <span id=\"agencies_key\"></span>\r\n                    <span className=\"name\">Agencies</span>\r\n                    <span id=\"agencies_size\">{agencyPer}%</span>\r\n                  </div>\r\n                  <div>\r\n                    <span id=\"clients_key\"></span>\r\n                    <span className=\"name\">Clients</span>\r\n                    <span id=\"clients_size\">{clientPer}%</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <footer>\r\n                <select name=\"time_frame\" id=\"time_frame\">\r\n                  <option value=\"6\">Last 6 days</option>\r\n                </select>\r\n                <span>\r\n                  Users Overview\r\n                  <BiRightArrow />\r\n                </span>\r\n              </footer>\r\n            </div>\r\n          </section>\r\n\r\n          {/*Users pie chart ends */}\r\n\r\n          {/* Ambassadors section starts */}\r\n\r\n          <Ambassador ambData={ambassadors} />\r\n\r\n          {/* Ambassadors section ends*/}\r\n        </section>\r\n        {/* GRID AREA 2 <--[END] */}\r\n      </div>\r\n      {/* GRID <--[END] */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"names":["_ref","amb","toggleWithdrawal","setToggleWithdrawal","formatMoney","currentAmb","setCurrentAmb","useState","showId","setShowId","message","setMessage","toggleMsg","setToggleMsg","withdraw","setWithDraw","Amount","ID","handleWithDraw","e","id","value","target","prev","handlePayOut","newPayout","payout","Number","newBal","availableBal","code","async","ambassadorsRequest","put","concat","_id","data","err","payOut","_jsxs","_Fragment","children","_jsx","style","transform","className","onClick","totalEarning","onSubmit","preventDefault","htmlFor","type","onChange","placeholder","spellCheck","autoComplete","required","setCurrent","src","picture","alt","firstName","lastName","Array","from","email","slice","length","models","activeModels","pendingModels","ambData","current","arguments","undefined","toLocaleString","map","AmbItem","PayOut","AdminDashboard","dispatch","useDispatch","model","setModel","client","setClient","agency","setAgency","blog","setBlog","ambassadors","setAmbassadors","stat","setStat","loginStat","setLoginStat","allData","setAllData","allLoginData","setAllLoginData","total","setTotal","modelPer","setModelPer","clientPer","setClientPer","agencyPer","setAgencyPer","useEffect","makeGet","reversedMessage","reverse","resModel","userRequest","get","fetchData","resClient","resAgency","resBlog","reversedBlog","res","fetchStat","fetchLoginStat","fetchAmbassadors","dataList","fill","forEach","s","loginDataList","month","login","Math","round","labels","datasets","label","width","backgroundColor","barPercentage","borderRadius","groupDonughtOptions","plugins","legend","display","cutout","radius","donughtData","name","Bar","options","scales","y","suggestedMax","maintainAspectRatio","BiRightArrow","color","item","index","role","moment","createdAt","format","colSpan","fromNow","title","Doughnut","BiWallet","size","BiRefresh","Ambassador"],"sourceRoot":""}