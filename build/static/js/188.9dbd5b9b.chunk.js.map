{"version":3,"file":"static/js/188.9dbd5b9b.chunk.js","mappings":"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","sources":["UI/Admin-UI/AdminPage/dashboard/dashboard.jsx"],"sourcesContent":["import \"./dashboard.scss\";\n\n//  Icons --> [START]\nimport { BiRightArrow, BiWallet, BiRefresh } from \"react-icons/bi\";\n// [END]\n\n// Temporary Profile Image\nimport profileImage from \"../../../../Images/img/slider3.jpg\";\n\n// Other External NPM Packages --> [START]\nimport { Chart } from \"chart.js/auto\"; //Registering Charts (\"Do not remove this import\")\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeGet } from \"../../../../redux/apiCalls\";\nimport moment from \"moment\";\nimport { userRequest } from \"../../../../redux/requestMethod\";\n// [END]\n\nconst AdminDashboard = () => {\n  const dispatch = useDispatch();\n\n  const [message, setMessage] = useState([]);\n  const [model, setModel] = useState([]);\n  const [client, setClient] = useState([]);\n  const [agency, setAgency] = useState([]);\n  const [blog, setBlog] = useState([]);\n  //  get user stat\n  const [stat, setStat] = useState([]);\n  const [loginStat, setLoginStat] = useState([]);\n\n  useEffect(() => {\n    makeGet(dispatch, \"/user\", setMessage);\n  }, [setMessage, dispatch]);\n  const reversedMessage = [...message].reverse();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resModel = await userRequest.get(\"/model/models\");\n      setModel(resModel.data);\n    };\n    return () => fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const resClient = await userRequest.get(\"/client/clients\");\n      setClient(resClient.data);\n    };\n    return () => fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const resAgency = await userRequest.get(\"/agency/\");\n      setAgency(resAgency.data);\n    };\n    return () => fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const resBlog = await userRequest.get(\"/blog/blogs\");\n      setBlog(resBlog.data);\n    };\n    return () => fetchData();\n  }, []);\n  console.log(client, agency, model)\n\n  const reversedBlog = [...blog].reverse();\n\n  useEffect(() => {\n    const fetchStat = async () => {\n      const res = await userRequest.get(\"/admin/stats\");\n      setStat(res.data);\n    };\n    fetchStat();\n  }, []);\n\n  useEffect(() => {\n    const fetchLoginStat = async () => {\n      const res = await userRequest.get(\"/admin/login/stats\");\n      setLoginStat(res.data);\n    };\n    fetchLoginStat();\n  }, []);\n\n  const dataList = Array(12).fill(null); // Initialize the array with default value \"Dec\"\n  stat.forEach((s) => {\n    if (s._id >= 1 && s._id <= 12) {\n      dataList[s._id - 1] = s.total;\n    }\n  });\n\n  const loginDataList = Array(12).fill(null); // Initialize the array with default value \"Dec\"\n  loginStat.forEach((s) => {\n    if (s.month >= 1 && s.month <= 12) {\n      loginDataList[s.month - 1] = s.login;\n    }\n  });\n\n  // get %\n  const total = model?.length + agency?.length + client?.length;\n  const modelPer = Math.round((model?.length * 100) / total);\n  const agencyPer = Math.round((agency?.length * 100) / total);\n  const clientPer = Math.round((client?.length * 100) / total);\n\n  // Now dataList will have the values based on _id indices\n  // console.log(dataList);\n\n  const data = {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sept\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ],\n    datasets: [\n      {\n        label: \"NEW USER\",\n        width: \"10px\",\n        backgroundColor: \"royalblue\",\n        data: dataList,\n        barPercentage: 0.5,\n        borderRadius: 4,\n      },\n      {\n        label: \"LOGINS\",\n        backgroundColor: \"hotpink\",\n        data: loginDataList,\n        barPercentage: 0.5,\n        borderRadius: 4,\n      },\n    ],\n  };\n  const options = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      y: {\n        suggestedMax: 30,\n      },\n    },\n    maintainAspectRatio: false,\n  };\n  //   [END]\n\n  const donughtOptions = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    cutout: \"80%\",\n  };\n  //   [END]\n\n  //Data used in Group Stats[START]\n  const modelData = {\n    datasets: [\n      {\n        backgroundColor: [\"#bfc4c9\", \"royalblue\"],\n        data: [14409, 10566],\n      },\n    ],\n  };\n  const agenciesData = {\n    datasets: [\n      {\n        backgroundColor: [\"#bfc4c9\", \"hotpink\"],\n        data: [14409, 1365],\n      },\n    ],\n  };\n  const clientsData = {\n    datasets: [\n      {\n        backgroundColor: [\"#bfc4c9\", \"black\"],\n        data: [14409, 2468],\n      },\n    ],\n  };\n\n  const groupDonughtOptions = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    cutout: \"40%\",\n    radius: \"100%\",\n  };\n  //   [END]\n\n  //Data Used in Pie Chart For User History [START]\n  const donughtData = {\n    labels: [\"Models\", \"Agencies\", \"Clients\"],\n    datasets: [\n      {\n        backgroundColor: [\"royalblue\", \"hotpink\", \"black\"],\n        data: [model?.length, agency?.length, client?.length],\n      },\n    ],\n  };\n\n  return (\n    <div id=\"admin_dashboard\">\n      {/* GRID <--[START] */}\n      <div className=\"pane\">\n        {/* GRID AREA 1 --> [START] */}\n        <div id=\"area_one\">\n          <div className=\"holder\">\n            <div className=\"visitor_stats\">\n              <header>\n                <span>User Statistics</span>\n                <span id=\"key_holder\">\n                  <span className=\"key\"></span>USERS\n                  <span className=\"key\"></span>LOGINS\n                </span>\n                <select name=\"time_frame\" id=\"time_frame\">\n                  <option value=\"6\">Last 6 days</option>\n                </select>\n              </header>\n              <div id=\"visitors_bar_chart\">\n                <Bar data={data} options={options} />\n              </div>\n              <footer>\n                <span>\n                  Audience Overview <BiRightArrow color=\"#ff007a\" />\n                </span>\n              </footer>\n            </div>\n          </div>\n          <div id=\"recent_members\">\n            <table id=\"recent_members_table\">\n              <caption>\n                <h3>Recent Members</h3>\n              </caption>\n              <thead>\n                <tr>\n                  <th>Username</th>\n                  <th>Level</th>\n                  <th>Joined</th>\n                  {/* <th>Expires</th> */}\n                </tr>\n              </thead>\n              <tbody>\n                {reversedMessage?.slice(0, 4).map((item, index) => (\n                  <tr key={index}>\n                    <td>\n                      <div className=\"profile\">\n                        <div className=\"profile_image\">\n                          <img\n                            src={\n                              item?.picture\n                                ? item?.picture\n                                : \"/images/avatar2.png\"\n                            }\n                            alt=\"profilepic\"\n                          />\n                        </div>\n                        <div className=\"profile_name\">\n                          <div>{item?.firstName} </div>\n                          <div>{item?.lastName}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td>{item?.role}</td>\n                    <td>{moment(item?.createdAt).format(\"MMMM DD, YYYY\")}</td>\n                    {/* <td>Dec 26, 2022</td> */}\n                  </tr>\n                ))}\n              </tbody>\n              <tfoot>\n                <tr>\n                  <td colSpan={4}>\n                    <span>\n                      View All Members <BiRightArrow />\n                    </span>\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n        {/* GRID AREA 1 <--[END] */}\n\n        {/* GRID AREA 2 --> [START] */}\n        <div id=\"area_two\">\n          <div id=\"group_stats\">\n            <div className=\"group_stats_box\">\n              <div>\n                <div>Models</div>\n                <div>{model.length}</div>\n              </div>\n              <div>\n                <Doughnut data={modelData} options={groupDonughtOptions} />\n              </div>\n            </div>\n            <span className=\"group_stats_box\">\n              <div>\n                <div>Agencies</div>\n                {agency.length}\n              </div>\n              <div>\n                <Doughnut data={agenciesData} options={groupDonughtOptions} />\n              </div>\n            </span>\n            <span className=\"group_stats_box\">\n              <div>\n                <div>Clients</div>\n                {client.length}\n              </div>\n              <div>\n                <Doughnut data={clientsData} options={groupDonughtOptions} />\n              </div>\n            </span>\n          </div>\n          <div id=\"wallet_buttons\">\n            <button id=\"active\">\n              <BiWallet size={20} />\n              <span>AGENCY WALLET</span>\n            </button>\n            <button>\n              <BiWallet size={20} />\n              <span>MODEL WALLET</span>\n            </button>\n          </div>\n          <div className=\"holder\">\n            <div id=\"donught_chart_holder\">\n              <header>\n                <span>Users Pie Chart History</span>\n                <BiRefresh size={30} color=\"#66788A\" />\n              </header>\n              <div id=\"donught_chart\">\n                <div>\n                  <Doughnut data={donughtData} options={donughtOptions} />\n                </div>\n                <div>\n                  <div>\n                    <span id=\"models_key\"></span>\n                    <span className=\"name\">Models</span>\n                    <span id=\"models_size\">{modelPer}%</span>\n                  </div>\n                  <div>\n                    <span id=\"agencies_key\"></span>\n                    <span className=\"name\">Agencies</span>\n                    <span id=\"agencies_size\">{agencyPer}%</span>\n                  </div>\n                  <div>\n                    <span id=\"clients_key\"></span>\n                    <span className=\"name\">Clients</span>\n                    <span id=\"clients_size\">{clientPer}%</span>\n                  </div>\n                </div>\n              </div>\n              <footer>\n                <select name=\"time_frame\" id=\"time_frame\">\n                  <option value=\"6\">Last 6 days</option>\n                </select>\n                <span>\n                  Users Overview\n                  <BiRightArrow />\n                </span>\n              </footer>\n            </div>\n          </div>\n          <div id=\"activity\">\n            <table id=\"activities_table\">\n              <caption>\n                <h3>Activity</h3>\n                <p>Recently Published</p>\n              </caption>\n\n              <thead>\n                <tr>\n                  <th>DATE & TIME</th>\n                  <th>POSTS</th>\n                </tr>\n              </thead>\n              <tbody>\n                {reversedBlog?.slice(0, 5).map((blog, index) => (\n                  <tr key={index}>\n                    <td>{moment(blog.createdAt).fromNow()}</td>\n                    <td>{blog?.title}</td>\n                  </tr>\n                ))}\n              </tbody>\n              {/* <tfoot>\n                <tr>\n                  <td colSpan={2}>\n                    <span>\n                      Recent Comments <BiRightArrow />\n                    </span>\n                  </td>\n                </tr>\n              </tfoot> */}\n            </table>\n          </div>\n        </div>\n        {/* GRID AREA 2 <--[END] */}\n      </div>\n      {/* GRID <--[END] */}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","model","setModel","_useState5","_useState6","client","setClient","_useState7","_useState8","agency","setAgency","_useState9","_useState10","blog","setBlog","_useState11","_useState12","stat","setStat","_useState13","_useState14","loginStat","setLoginStat","useEffect","makeGet","reversedMessage","_toConsumableArray","reverse","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resModel","wrap","_context","prev","next","userRequest","sent","data","stop","apply","arguments","_ref2","_callee2","resClient","_context2","_ref3","_callee3","resAgency","_context3","_ref4","_callee4","resBlog","_context4","console","log","reversedBlog","fetchStat","_ref5","_callee5","res","_context5","fetchLoginStat","_ref6","_callee6","_context6","dataList","Array","fill","forEach","s","_id","total","loginDataList","month","login","length","modelPer","Math","round","agencyPer","clientPer","labels","datasets","label","width","backgroundColor","barPercentage","borderRadius","groupDonughtOptions","plugins","legend","display","cutout","radius","donughtData","_jsx","id","children","_jsxs","className","name","value","Bar","options","scales","y","suggestedMax","maintainAspectRatio","BiRightArrow","color","slice","map","item","index","src","picture","alt","firstName","lastName","role","moment","createdAt","format","colSpan","Doughnut","BiWallet","size","BiRefresh","fromNow","title"],"sourceRoot":""}