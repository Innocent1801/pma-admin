{"version":3,"file":"static/js/971.0efd5823.chunk.js","mappings":"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","sources":["Images/img/avatar.svg","ATOMIC/atoms/button/Button.jsx","ATOMIC/atoms/card/Card.jsx","ATOMIC/atoms/container/Container.jsx","ATOMIC/atoms/input/Input.jsx","ATOMIC/molecules/datatable/Pagination.jsx","ATOMIC/molecules/modal/Modal.jsx","ATOMIC/organisms/InputTab.jsx","ATOMIC/templates/Layout.jsx","ATOMIC/organisms/clients/ClientCardTab.jsx","ATOMIC/organisms/clients/ClientsTable.jsx","UI/manageClients/ManageClients.jsx","../node_modules/@mui/icons-material/esm/NavigateBeforeOutlined.js","../node_modules/@mui/icons-material/esm/NavigateNextOutlined.js"],"sourcesContent":["var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAvatar(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 512,\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_1765_7055)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0H512V512H0V0Z\",\n    fill: \"#222D3A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M330.085 110.955C311.299 90.672 285.059 79.5024 256.097 79.5024C226.981 79.5024 200.655 90.6044 181.955 110.762C163.053 131.141 153.843 158.838 156.005 188.746C160.292 247.751 205.192 295.75 256.097 295.75C307.003 295.75 351.826 247.76 356.18 188.765C358.371 159.128 349.103 131.489 330.085 110.955Z\",\n    fill: \"#B3BAC0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.9275 511.997H458.333C459 503 458.206 483.499 456.333 473.141C448.185 427.941 422.757 389.972 382.789 363.327C347.282 339.675 302.305 326.642 256.13 326.642C209.956 326.642 164.978 339.666 129.471 363.327C89.5038 389.982 64.0754 427.951 55.9275 473.15C54.0546 483.509 53.5001 504.5 53.9275 511.997Z\",\n    fill: \"#B3BAC0\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_1765_7055\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 512,\n    height: 512,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAvatar);\nexport default __webpack_public_path__ + \"static/media/avatar.bed0beba0e8bf953080b665e81b37c57.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from \"clsx\";\nimport React from \"react\";\nimport './buttonStyle.scss'\n\n\nconst style = \"default\"\n\nconst Button = ({ onClick = (e) => {}, variant, children, className, isDisabled }) => {\n  switch (variant) {\n    case \"normal\":\n      className = clsx( \"btn-normal\");\n      break;\n    case \"blur\":\n      className = clsx( \"btn-blur\");\n      break;\n    case \"primary\":\n      className = clsx(style, \"btn-primary\");\n      break;\n    case \"secondary\":\n      className = clsx(style, \"btn-secondary\");\n      break;\n    case \"transparent\":\n      className = clsx(style, \"btn-transparent\");\n      break;\n    case \"outlined\":\n      className = clsx(style, \"btn-outlined\");\n      break;\n    default:\n      break;\n  }\n  return (\n    <button onClick={(e) => onClick(e)} className={className} isDisabled={isDisabled}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import clsx from \"clsx\";\nimport \"./cardStyle.scss\";\n\nlet style = \"default\";\n\nconst Card = ({  children, className, variant }) => {\n  switch (variant) {\n    case \"fill_light_green\":\n      className = clsx(style, \"card-light-green\");\n      break;\n    case \"fill_light_green-md\":\n      className = clsx(style, \"card-light-green_md\");\n      break;\n    case \"fill_red\":\n      className = clsx(style, \"card-red\");\n      break;\n    case \"fill_red-md\":\n      className = clsx(style, \"card-red_md\");\n      break;\n    case \"fill_black\":\n      className = clsx(style, \"card-black\");\n      break;\n    case \"full_width\":\n      className = \"full_width\";\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div\n      variant={variant}\n      className={clsx(style, className)}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./containerStyle.scss\";\n\nconst Container = ({ variant, children, className }) => {\n  switch (variant) {\n    case \"flexFit\":\n      className = \"flex-fit\";\n      break;\n    case \"flexed\":\n      className = \"flex-bw\";\n      break;\n    case \"normal\":\n      className = \"container\";\n      break;\n    case \"container_fit\":\n      className = \"container_fit\";\n      break;\n    case \"gapped\":\n      className = \"gapped\";\n      break;\n    case \"gapped-spaced\":\n      className = \"nav-flex-bw\";\n      break;\n    case \"gapped-top\":\n      className = \"gapped-top\";\n      break;\n    case \"gapped-top-center\":\n      className = \"gapped-top-center\";\n      break;\n    case \"flex-around\":\n      className = \"flex-around\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <main className={className} variant={variant}>\n      {children}\n    </main>\n  );\n};\n\nexport default Container;\n","import React from \"react\";\nimport \"./inputStyle.scss\";\n\nconst Input = ({\n  onChange = (e) => null,\n  type = \"\",\n  className,\n  name,\n  checked,\n  placeholder = \"\",\n  variant,\n  max,\n  value,\n}) => {\n  switch (variant) {\n    case \"normal\":\n      className = \"input\";\n      break;\n    case \"checkbox\":\n      className = \"checkbox\";\n      break;\n    case \"number\":\n      className = \"number\";\n      break;\n    case \"search\":\n      className = \"search\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <input\n      placeholder={placeholder}\n      name={name}\n      type={type}\n      value={value}\n      max={max}\n      checked={checked}\n      onChange={onChange}\n      className={className}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport Button from \"../../atoms/button/Button\";\nimport Container from \"../../atoms/container/Container\";\nimport './pagination.scss'\nimport { NavigateBeforeOutlined, NavigateNextOutlined } from \"@mui/icons-material\";\n\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange,\n  handleNextClick,\n  handlePrevClick,\n}) => {\n\n  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);\n\n  const handlePageClick = (page) => {\n    if (page < 1 || page > totalPages || page === currentPage) {\n      return;\n    }\n    onPageChange(page);\n  };\n\n  const renderPageButtons = () => {\n    let pageButtons = [];\n    if (totalPages <= 5) {\n      pageButtons = pages;\n    } else if (currentPage <= 3) {\n      pageButtons = pages.slice(0, 5);\n    } else if (currentPage > totalPages - 3) {\n      pageButtons = pages.slice(totalPages - 5, totalPages);\n    } else {\n      pageButtons = pages.slice(currentPage - 3, currentPage + 2);\n    }\n    return pageButtons.map((page) => (\n      <button\n        key={page}\n        className={`Pagination__button ${\n          page === currentPage ? \"Pagination__button--active\" : \"\"\n        }`}\n        onClick={() => handlePageClick(page)}\n      >\n        {page}\n      </button>\n    ));\n  };\n\n  return (\n    <Container className=\"Pagination\">\n      <Button\n        className=\"Pagination__button Pagination__button--arrow\"\n        onClick={handlePrevClick}\n        disabled={currentPage <= 1}\n      >\n      <NavigateBeforeOutlined/>\n      </Button>\n      {renderPageButtons()}\n      <Button\n        className=\"Pagination__button Pagination__button--arrow\"\n        onClick={handleNextClick}\n        disabled={currentPage >= totalPages}\n      >\n       <NavigateNextOutlined/>\n      </Button>\n    </Container>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport './modal.scss'\n\nconst Modal = ({ isOpen, onClose, children }) => {\n    const [isVisible, setIsVisible] = useState(isOpen);\n\n  const handleClose = () => {\n    setIsVisible(false);\n    onClose();\n  };\n  \n  return (\n    // className={isModalOpen ? \"modal-overlay\" : \"modal-hiden\"}\n    <div className={isOpen ? \"modal-overlay \": \"modal-hiden\"}>\n      <div className=\"modal\">\n        <div className=\"modal-content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\n\n","import React from \"react\";\nimport Input from \"../atoms/input/Input\";\nimport Container from \"../atoms/container/Container\";\nimport { useState } from \"react\";\n\nconst InputTab = ({pageSize, handlePageSizeChange, totalRows}) => {\n  const [formValue, setFormField] = useState({\n    field1: \"\",\n    field2: 10,\n  });\n\n  const handleChange = (e) => {\n    setFormField(e.target.value);\n  };\n\n  return (\n    <Container variant=\"gapped-top\">\n      <Container variant=\"gapped\">\n        <div>Search</div>\n        <Input\n          variant=\"normal\"\n          type=\"text\"\n          value={formValue.field1}\n          onChange={handleChange}\n          placeholder=\"Enter here\"\n        />\n      </Container>\n      <Container variant=\"gapped\">\n        <div>Show</div>\n        <Input\n          variant=\"number\"\n          type=\"number\"\n          max={totalRows}\n          value={pageSize}\n          onChange={handlePageSizeChange}\n        />\n        <div>entries</div>\n      </Container>\n    </Container>\n  );\n};\n\nexport default InputTab;\n","import React from \"react\";\nimport './layout.scss'\n\nconst Layout = ({ children }) => {\n  return (\n    <main className=\"layout\">\n      <main>{children}</main>\n    </main>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Card from \"../../atoms/card/Card\";\nimport Container from \"../../atoms/container/Container\";\n\nconst ClientCardTab = ({ client }) => {\n  const isVerified = client.filter((item) => item.isVerified);\n  const notVerified = client.filter((item) => !item.isVerified);\n  const schema = [\n    {\n      id: 1,\n      variant: \"fill_light_green-md\",\n      txt_1: isVerified.length,\n      desc: \"Verified\",\n    },\n    {\n      id: 2,\n      variant: \"fill_red-md\",\n      txt_1: notVerified.length,\n      desc: \"Not Verified\",\n    },\n  ];\n\n  \n  return (\n    <div>\n      <Container variant=\"flexed\">\n        {schema.map((item) => {\n          const { id, variant, txt_1, desc } = item;\n          return (\n            <Card key={id} variant={variant}>\n              <p>{txt_1}</p>\n              <p>{desc}</p>\n            </Card>\n          );\n        })}\n      </Container>\n      <div>\n        <Card variant=\"full_width\">MANAGE CLIENTS</Card>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientCardTab;\n","import React, { useState } from \"react\";\nimport InputTab from \"../InputTab\";\nimport \"./tableSection.scss\";\nimport { v4 } from \"uuid\";\nimport Image from \"mui-image\";\nimport Button from \"../../atoms/button/Button\";\nimport Input from \"../../atoms/input/Input\";\nimport { Link } from \"react-router-dom\";\nimport avatar from \"../../../Images/img/avatar.svg\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Pagination from \"../../molecules/datatable/Pagination\";\nimport { selectClient } from \"../../../redux/clientsRedux\";\nimport { userRequest } from \"../../../redux/requestMethod\";\nimport Modal from \"../../molecules/modal/Modal\";\nimport \"../../molecules/modal/modal.scss\";\n\nconst ClientsTable = ({ client, isDelete, setIsDelete }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(5);\n  const [selectedIds, setSelectedIds] = useState([]);\n\n  const totalRows = client.length;\n  const totalPages = Math.ceil(totalRows / pageSize);\n\n  const startIndex = (currentPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n\n  const handleDelete = async (id) => {\n    await userRequest.delete(`/admin/client/${id}`);\n    setIsDelete(!isDelete);\n  };\n\n  const rowsToDisplay = client.slice(startIndex, endIndex);\n  console.log(rowsToDisplay);\n\n  const handleNextClick = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const onPageChange = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handlePageSizeChange = (newPageSize) => {\n    setPageSize(newPageSize);\n    setCurrentPage(1);\n  };\n  const handlePageSizeChangeFromInput = (event) => {\n    const newPageSize = parseInt(event.target.value);\n    handlePageSizeChange(newPageSize);\n  };\n\n  const handleCheckboxChange = (event) => {\n    const itemId = event.target.value;\n    if (event.target.checked) {\n      setSelectedIds([...selectedIds, itemId]);\n    } else {\n      setSelectedIds(selectedIds.filter((id) => id !== itemId));\n    }\n  };\n\n  const handleClientClick = () => {\n    const randomIndex = Math.floor(Math.random() * rowsToDisplay.length);\n    const randomClient = rowsToDisplay[randomIndex];\n    const randomId = randomClient._id;\n    handleDelete(randomId)\n  }\n\n  const handleSelectedClient = (id) => {\n    dispatch(selectClient(id));\n  };\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <main>\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n        <p className=\"modal-text\">Are you sure you want to delete this user?</p>\n        <div className=\"btn-group\">\n          <Button variant=\"outlined\" onClick={handleCloseModal}>\n            Cancel\n          </Button>\n          <Button\n            variant=\"secondary\"\n            onClick={handleClientClick}\n          >\n            delete\n          </Button>\n        </div>\n      </Modal>\n      <div>\n        <div className=\"table_container\">\n          <InputTab\n            pageSize={pageSize}\n            handlePageSizeChange={handlePageSizeChangeFromInput}\n            totalRows={totalRows}\n          />\n          <div className=\"table\">\n            <table className=\"data-table\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Picture</th>\n                  <th style={{ width: \"150px\" }}>Location</th>\n                  <th style={{ width: \"150px\" }}>Name</th>\n                  <th style={{ width: \"150px\" }}>Edit</th>\n                  <th style={{ width: \"150px\" }}>Delete</th>\n                  <th style={{ width: \"150px\" }}>Select</th>\n                </tr>\n              </thead>\n              <tbody>\n                {rowsToDisplay !== 0 ? (\n                  <>\n                    {rowsToDisplay.map((item, i) => {\n                      return (\n                        <tr key={i}>\n                          <td>{i + 1}</td>\n                          <td>\n                            <div className=\"table_img\">\n                              <Image\n                                width={100}\n                                height={97}\n                                src={item.picture ? item.picture : avatar}\n                                alt={item.picture}\n                              />\n                            </div>\n                          </td>\n                          <td style={{ width: \"150px\", textAlign: \"center\" }}>\n                            <div>\n                              {item.country && item.state ? (\n                                <p>\n                                  {item.country}, {item.state}\n                                </p>\n                              ) : (\n                                <span>No Location</span>\n                              )}\n                            </div>\n                          </td>\n                          <td style={{ width: \"150px\", textAlign: \"center\" }}>\n                            {item.fullName}\n                          </td>\n                          <td style={{ width: \"150px\", textAlign: \"center\" }}>\n                            <Link to={`/adminpage/manage_clients/${item._id}`}>\n                              <Button\n                                variant=\"primary\"\n                                onClick={() => handleSelectedClient(item._id)}\n                              >\n                                Edit\n                              </Button>\n                            </Link>\n                          </td>\n                          <td style={{ width: \"150px\", textAlign: \"center\" }}>\n                            <Button\n                              variant=\"secondary\"\n                              onClick={handleOpenModal}\n                            >\n                              Delete\n                            </Button>\n                          </td>\n                          <td style={{ width: \"150px\", textAlign: \"center\" }}>\n                            <label>\n                              <Input\n                                variant=\"checkbox\"\n                                type=\"checkbox\"\n                                name={item._id}\n                                value={item._id}\n                                checked={selectedIds.includes(item._id)}\n                                onChange={handleCheckboxChange}\n                              />\n                            </label>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </>\n                ) : (\n                  <div>no users yet!</div>\n                )}\n              </tbody>\n            </table>\n            {/* <DataTable data={rowsToDisplay} /> */}\n          </div>\n        </div>\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          onPageChange={onPageChange}\n          handlePrevClick={handlePrevClick}\n          handleNextClick={handleNextClick}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default ClientsTable;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport Layout from \"../../ATOMIC/templates/Layout\";\nimport ClientCardTab from \"../../ATOMIC/organisms/clients/ClientCardTab\";\nimport Container from \"../../ATOMIC/atoms/container/Container\";\nimport ClientsTable from \"../../ATOMIC/organisms/clients/ClientsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { makeGet } from \"../../redux/apiCalls\";\n\nconst ManageClients = () => {\n  const dispatch = useDispatch();\n\n  const [client, setClient] = useState([]);\n  // console.log(client._id);\n  const [isDelete, setIsDelete] = useState(false);\n\n  const fetchAgency = useCallback(() => {\n    makeGet(dispatch, \"/client/clients\", setClient);\n  }, [dispatch]);\n\n  useEffect(() => {\n    const unsubscribe = fetchAgency();\n    return () => unsubscribe;\n  }, [isDelete]);\n\n  return (\n    <Container variant=\"normal\">\n      <Container variant=\"container_fit\">\n        <Layout>\n          <ClientCardTab client={client} />\n          <ClientsTable\n            client={client}\n            isDelete={isDelete}\n            setIsDelete={setIsDelete}\n          />\n        </Layout>\n      </Container>\n    </Container>\n  );\n};\n\nexport default ManageClients;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.61 7.41 14.2 6l-6 6 6 6 1.41-1.41L11.03 12l4.58-4.59z\"\n}), 'NavigateBeforeOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10.02 6 8.61 7.41 13.19 12l-4.58 4.59L10.02 18l6-6-6-6z\"\n}), 'NavigateNextOutlined');"],"names":["style","_ref","_ref$onClick","onClick","e","variant","children","className","isDisabled","clsx","_jsx","_ref$onChange","onChange","_ref$type","type","name","checked","_ref$placeholder","placeholder","max","value","currentPage","totalPages","onPageChange","handleNextClick","handlePrevClick","pages","Array","from","length","_","i","_jsxs","Container","Button","disabled","NavigateBeforeOutlined","slice","map","page","concat","handlePageClick","NavigateNextOutlined","isOpen","onClose","_useState","useState","_useState2","_slicedToArray","pageSize","handlePageSizeChange","totalRows","field1","field2","formValue","setFormField","Input","target","client","isVerified","filter","item","notVerified","schema","id","txt_1","desc","Card","isDelete","setIsDelete","isModalOpen","setIsModalOpen","dispatch","useDispatch","_useState3","_useState4","setCurrentPage","_useState5","_useState6","setPageSize","_useState7","_useState8","selectedIds","setSelectedIds","Math","ceil","startIndex","endIndex","handleDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","userRequest","stop","_x","apply","arguments","rowsToDisplay","console","log","handleCheckboxChange","event","itemId","_toConsumableArray","handleOpenModal","handleCloseModal","Modal","randomIndex","floor","random","randomId","_id","InputTab","newPageSize","parseInt","width","_Fragment","Image","height","src","picture","avatar","alt","textAlign","country","state","fullName","Link","to","selectClient","includes","Pagination","pageNumber","setClient","fetchAgency","useCallback","makeGet","useEffect","unsubscribe","Layout","ClientCardTab","ClientsTable","createSvgIcon","d"],"sourceRoot":""}